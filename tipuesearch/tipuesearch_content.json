{"pages":[{"title":"Polskie znaki w LaTeX-u (Ubuntu, Times New Roman)","url":"/pl/articles/latex-custom-fonts/","text":"LaTeX jest darmowym systemem składania tekstu (ang. typesetting). Jest ceniony za wiele właściwości takich jak automatyzacja procesu (generowanie bibliografii, odsyłaczy, równań matematycznych). Pozwala na skupienie się na tekście zamiast na jego wyglądzie poprzez wykorzystanie plików ze stylami (np. bibliografii) odpowiednich dla danego czasopisma. Przede wszystkim jest dostępny również na różne dystrybucje Linuxa. Jednym z problemów, na jakie można napotkać podczas pisania pracy, są wymagania dotyczące użycia określonych czcionek. Standardowo wykorzystuje się następujące paczki zapewniające wsparcie dla polskich znaków: \\usepackage[utf8]{inputenc} \\usepackage[T1]{fontenc} \\usepackage{polski} Taka konfiguracja zazwyczaj wystarcza przy założeniu, że pliki kodowane są w systemie UTF-8. Następnie wybieramy czcionkę \\usepackage{times}. Niestety zarówno przestarzała paczka times, jak i nowsze mathptmx, pslatex, oraz txfonts (newtxtext/newtxmath) wykorzystują tak naprawdę czcionki URW NimbusRomNo9L, które są bardzo podobne do Times Roman. Ponadto mimo tego, że polskie znaki wyświetlane są poprawnie, to podczas kopiowania mogą wystąpić błędy. Warto zwrócić na to uwagę, gdyż w programach antyplagiatowych wyrazy z polskimi literami zostaną nierozpoznane. Zażółć gęślą jaźń Zażółć g ̨eśl a ̨ jaźń W celu rozwiązania tego tego problemu można skorzystać z innej czcionki - TeX Gyre Termes: \\usepackage{tgtermes}. Z innymi rodzajami czcionek zapoznać się można w bazie wiedzy ShareLaTeX. Oryginalna czcionka Times New RomanNajprostszy sposób na załadowanie znanych z Windowsa czcionek na Ubuntu składa się z 3 kroków: Instalacja czcionek TrueType Microsoft: sudo apt-get install ttf-mscorefonts-installer Podczas instalacji pojawi się okno z warunkami udzielenia licencji (Microsoft EULA). Czcionki zostały udostępnione za darmo jednak nie są one open-source. Zastąpienie paczek inputenc i fontenc następującymi komendami: \\usepackage{fontspec} \\setmainfont{Times New Roman} Zmiana programu pdflatex na xelatex: xelatex main.tex bibtex main xelatex main.tex xelatex main.tex W praktyce proces generowania pliku pdf może się nieco wydłużyć. W przypadku innego kodowania plików należy zastosować polecenia \\XeTeXinputencoding dla poprzedzającego tekstu bądź \\XeTeXdefaultencoding standardowo dla wszystkich plików, np. \\XeTeXdefaultencoding “cp1250” (kodowanie używane przez Microsoft Windows dla języków środkowoeuropejskich, w tym polskiego). Czcionki niestandardoweJeśli chcemy użyć czcionek niestandardowych np. Arial Narrow wystarczy przenieść je (rozszerzenie ttf dla czcionek TrueType) do stworzonego katalogu w /usr/share/fonts/.","tags":"latex linux ubuntu times-new-roman czcionki polskie-znaki","lang":"pl"},{"title":"Diacritics in LaTeX (Ubuntu, Times New Roman)","url":"/en/articles/latex-custom-fonts/","text":"LaTeX is a free typesetting system. It is valued for many properties such as automated processing (generating bibliographies, links, mathematical equations). It allows you to focus on the text instead of its appearance by using files with styles (e.g. bibliography) suitable for a given journal. Foremostly, it is also available for various Linux distributions. One of the problems you may encounter while writing an article are the requirements for the use of certain fonts. By default, the following packages are used to provide support for language characters (accents/diacritics): \\usepackage[utf8]{inputenc} \\usepackage[T1]{fontenc} \\usepackage[your_language]{babel} %e.g. \\usepackage[slovak]{babel} Such configuration usually suffices assuming that the files are encoded in the UTF-8 system. Next choose the font \\usepackage{times}. Unfortunately both outdated times and newer mathptmx, pslatex and txfonts (newtxtext/newtxmath) underneath use URW NimbusRomNo9L fonts that are very similar to Times Roman but they are not same. Although language specific characters are displayed correctly, errors may occur during copying. It is worth paying attention to it because in anti-plagiarism programs, words with these letters will be unrecognized. ÁÄĎÉÍĽĹŇÓÔŔŤÚÝáäďéíľĺňóôŕťúý ÁÄĎÉÍL’ĹŇÓÔŔŤÚÝáäd’éíl’ĺňóôŕt’úý To solve this problem, you can use a different font - TeX Gyre Termes: \\usepackage{tgtermes}. You can read more about other fonts in the ShareLaTeX knowledge base. Original Times New Roman fontThe easiest way to load fonts on Ubuntu known from Windows consists of three steps: Installation of TrueType Microsoft fonts: sudo apt-get install ttf-mscorefonts-installer During the installation process you will be asked to accept Microsoft EULA. The fonts have been made available for free but they are not open-source. Replacement inputenc and fontenc packages with the following commands: \\usepackage{fontspec} \\setmainfont{Times New Roman} Program change from pdflatex to xelatex: xelatex main.tex bibtex main xelatex main.tex xelatex main.tex W praktyce proces generowania pliku pdf może się nieco wydłużyć. W przypadku innego kodowania plików należy zastosować polecenia \\XeTeXinputencoding dla poprzedzającego tekstu bądź \\XeTeXdefaultencoding standardowo dla wszystkich plików, np. \\XeTeXdefaultencoding “cp1250” (kodowanie używane przez Microsoft Windows dla języków środkowoeuropejskich, w tym polskiego). In practice, the process of generating a pdf file may be slightly longer. For other file endocings use the \\XeTeXinputencoding command for the preceding text or \\XeTeXdefaultencoding as a standard for all files, e.g. \\XeTeXdefaultencoding “cp1250” (coding used by Microsoft Windows for Central European languages). Custom fontsIf you want to use custom fonts like Arial Narrow, just place them (ttf extension for TrueType fonts) in a directory created under /usr/share/fonts/.","tags":"latex fonts accents special-characters diacritics linux ubuntu times-new-roman","lang":"en"},{"title":"Projekt BookRental","url":"/pl/articles/BookRental/","text":"BookRental to jeden ze starszych projektów obejmujących kilka zagadnień JEE. Jego celem było stworzenie systemu zarządzania biblioteką, a konkretniej: książkami, wypożyczeniami, rezerwacjami, użytkownikami oraz pracownikami. Aplikacja realizuje ponad 20 różnych funkcji biznesowych. Główne technologie użyte w projekcie to: Java, JSTL, JSF, PrimeFaces, JPA, JDB. Prezentację aplikacji można obejrzeć w galerii. Momentami nie wygląda ona zbyt atrakcyjnie, gdyż była tworzona na początku nauki JEE i technologii internetowych [2015] (zobacz nowszą aplikację Develog aby zauważyć różnice). Funkcjonalności zaimplementowane w aplikacji to: Wyświetlanie listy książek. Koszyk z możliwością dodawania i usuwania książek. Możliwość wypożyczenia książek. Zarządzanie książkami w panelu administracyjnym. Rejestracja czytelników. Potwierdzenie rejestracji w panelu administracyjnym. Możliwość zalogowania się na swoje konto. Tylko użytkownicy zalogowani mogą wypożyczać książki. Konta dla pracowników wypożyczalni. Pracownicy mogą zarządzać książkami, czytelnikami i wypożyczeniami. Pracownikami zarządza administrator. Kategorie książek. Kategorie tworzą wielopoziomowe drzewa. Każda książka należy do dokładnie jednej kategorii, Możliwość przeglądania książek według kategorii. Etykiety (tagi) dla książek. Każda książka może być opatrzona wieloma etykietami. Przeglądanie książek według etykiet. Dodatkowe pliki do pobrania przy opisie ksiąski, np.: kody źródłowe programów, próbki muzyki czy filmów. Każdy plik posiada swój opis. Liczba plików nie jest ograniczona. Wyszukiwanie książek na podstawie tytułu, nazwy autora, ISBNu i ewentualnie innych atrybutów. Operatory logiczne typu and, or i not przy wyszukiwaniu. Historia wyszukiwań. Każdy zalogowany użytkownik może zapisać wyniki wyszukiwania w bazie by w innym czasie móc je odtworzyć. Przeglądanie archiwum wypożyczeń czytelnika. Administracja wypożyczeniami. Stany wypożyczeń: książka w magazynie, oczekuje na odbiór (jest na półce czytelnika), wypożyczona. Zmiana stanu wypożyczenia przez pracownika. Stany magazynowe książek. Automatyczna aktualizacja stanów przy wypożyczeniu i zwrocie książki. Możliwość zapisania się do kolejki, gdy danej książki nie ma aktualnie w magazynie. Kary pieniężne za zbyt długie przetrzymywanie książek. Blokada wypożyczeń przy nie zwróceniu książek i niezapłaceniu kary. Maksymalny czas przetrzymywaniu ustawiany przez administratora. Wiadomości redagowane przez administratora i umieszczane na stronie głównej. Wyświetlanie nowości (kilku ostatnio dodanych książek) na stronie głównej. Wybór skórek dla interfejsu użytkownika. Dodatkowa wersja językowa interfejsu użytkownika. ProjektZe względu na wybrane technologie, wykorzystana została standardowa architektura aplikacji, którą prezentuje poniższy rysunek: Źródło: http://www.thejavageek.com Aplikacja wykorzystuje wzorzec MVC, który dzieli się na trzy główne części: model (JPA + EJB) – reprezentuje dane z bazy danych w postaci logicznej, implementuje funkcje biznesowe; widok (JSF page) – wyświetla dane modelu; kontroler (JSF bean) – odbiera dane wejściowe od użytkownika przetwarza je, aktualizuje oraz odświeża model. Znormalizowany model bazy danych (3NF - niepełny, nieznaczna redundancja): Pewne założenia, które mogłyby wymagać wyjaśnienia: Jeśli książka nie ma numeru ISBN (co się zdarza, choć bardzo rzadko) to należy nadać jej unikalną wartość gdyż książki rozróżniane są po polu ISBN. Egzemplarze tych samych książek nie różnią się numerem ISBN (różnią się numerem id). Do numeru ISBN przypisane są kategoria, tagi i zasoby (np. pliki) oraz rezerwacje w przypadku braku książek w magazynie. Do książki przypisywane są wypożyczenia oraz rezerwacje. StrukturaStrukturę projektu przedstawia poniższy rysunek:Każdemu z pakietów odpowiada inne przeznaczenie: Klasy entity - POJO, opakowują dane pobierane z bazy danych w typy abstrakcyjne np. Book. Klasy session / facade – fasady EJB, pozwalają na komunikację z bazą danych na wyższym poziomie niż JDBC. Beany te działają po stronie serwera i mogą być wstrzykiwane do innych elementów. W tym przypadku adnotowane @Stateless oznaczane jako bezstanowe, pozwalają na implementację serwisów. Klasy controller / jsf – kontrolery widoków JSF, ziarna zarządzane (ManagedBean), z deklarowanym zakresem np. SessionScoped, ViewScoped, ApplicationScoped, itp. Przechowują stan zgodnie z zakresem i zapewniają komunikację ze stronami JSF. Strony JSF mogą pobierać stan beana za pomocą wyrażenia #{bean.field} (przy założeniu, że zaimplementowano gettery i settery). Na strukturę ostatniej warstwy – widokowej składają się strony JSF. Do budowania stron JSF wykorzystywany jest system szablonów Facelets. W przypadku tego projektu wykorzystana została również open source’owa biblioteka komponentów UI – PrimeFaces. Dzięki temu frameworkowi możliwe jest tworzenie bogatszego interfejsu użytkownika. WEB-INF to specjalny folder w strukturze aplikacji, który nie jest dostępny publicznie, nie jest częścią publicznego drzewa dokumentu. Wydzielony został podfolder „view” w folderze WEB-INF a w nim konkretne widoki. Elementy o charakterystycznych nazwach takich jak „Create”, „Edit” czy „View” reprezentują okna (dialog), które poprzez kompozycje włączane są do innych widoków (głównie list) i wyświetlane podczas kliknięcia przycisku. Dla użytkownika dostęp do okien jest sensowny jedynie poprzez widoki, dlatego też zostały one umieszczone w folderze WEB-INF. Kolejnymi elementami są szablony, które również korzystają z mechanizmu kompozycji i użytkownik nie powinien mieć do nich dostępu. Ostatnią częścią składową folderu WEB-INF są strony, do których użytkownik zostaje przekierowany po zalogowaniu się. Informują one między innymi o braku praw do przeglądania strony, zablokowanym czy nieaktywnym koncie, jak też o powodzeniu procesu logowania lub rejestracji. Cztery różne szablony podpinane są do stron w zależności od praw dostępu zalogowanego (bądź nie) użytkownika. Wyświetlany format danych również się zmienia, dlatego utworzone zostały różne widoki wyświetlające dane w postaci list. Widoki te korzystają ze wspólnych okien zadeklarowanych w folderze WEB-INF. UwagiElementy warte zwrócenia uwagi: Hasła haszowane funkcją skrótu SHA-256, w kolejnych wersjach aplikacji mogłyby być uzupełnione o sól/sole (ang. salt). OptionsController ładuje opcje serwisu z pliku na serwerze (np. dane związane z maksymalnym okresem wypożyczenia czy wartością kary za dzień spóźnienia). AuthorizationFilter – PhaseFilter nadzorujący dostępen do stron wymagających określonych uprawnień. Odpowiada za przekierowania w przypadku, gdy nie jest aktywowane lub zostało zbanowane. ThemeSwitcherBean oraz LanguageSwitcherBean zapisują do ciasteczek wybór preferencji dotyczących języka i skórki wybranych przez użytkownika. Zarządzaniem połączeniem z bazą danych zajmuje się server Glassfish. Typ bazy danych to Java DB. Typ transakcji to JTA, EntityManager jest wstrzykiwany poprzez @PersistenceContext. Po skonstruowaniu ziarna, a przed jego użyciem ustawiony zostanie język (na podstawie ciasteczka lub wcześniej zainicjowanej wartości w przypadku braku ciasteczka). Po zmianie języka tekst wczytywany będzie z odpowiedniego pliku Bundle* z katalogu resources. Przy implementacji tego założenia wykorzystana została biblioteka JSTL a dokładniej z tagi fmt: setLocale i setBundle, dzięki którym następuje włączenie plików z tłumaczeniem do strony. Umożliwia to korzystanie z tagu message z parametrem key – odwzorowaniem z pliku na przetłumaczoną frazę. Jedną z wad tego projektu jest brak internacjonalizacji (i18n) wiadomości tworzonych przez administratorów. Funkcjonalność ta została przegapiona zarówno w fazie projektowania jak i implementacji. Serwis również nie wygląda zbyt nowocześnie gdyż jest to jeden ze starszych projektów.","tags":"web cms model dokumentacja aplikacja baza-danych","lang":"pl"},{"title":"BookRental project","url":"/en/articles/BookRental/","text":"BookRental is one of the older projects covering several JEE aspects. Its aim was to create a library management system; namely, management of: books, loans, reservations, users and employees. The application implements more than 20 different business features. The main technologies used in the project are: Java, JSTL, JSF, PrimeFaces, JPA, JDB. The presentation of the application can be viewed in the gallery. At times, it does not look too attractive since it was created at the beginning of learning JEE and web technologies [2015] (check out Develog to see the difference). The features implemented in the application are: Displaying the list of books. Books cart with the possibility of adding and removing books. Book borrow feature. Book management in the administration panel. Registration of readers. Confirmation of registration in the administration panel. The ability to log in to your account. Only logged in users can borrow books. Accounts for rental employees. Employees can manage books, readers and rentals. Employees are managed by an administrator. Book categories. Categories form multi-level trees. Each book belongs to exactly one category, the ability to browse books by category. Labels (tags) for books. Each book can be labeled with many labels. Browsing books by labels. Additional resources for the description of the book, e.g. source codes for programs, samples of music or movies. Each file has its own description. The number of files is not limited. Searching for books based on the title, author’s name, ISBN and possibly other attributes. Boolean operators: and, or, not; when searching. Search history. Each logged in user can save search results in the database to be able to rerun them at other times. Browsing the reader’s rental archives. Loan administration. Rental status: book in stock, waiting for pickup (is on the reader’s shelf), loaned out. Manual status change by an employee. Books stock - automatic status update for borrowing and returning the book. Ability to subscribe to the queue when the book is currently not in stock (reservation). Financial penalties for keeping books too long. Blocking rentals when books are not returned and no penalty is paid. The maximum retention time set by the administrator. Messages editable by the administrator and posted on the main page. Display of news (several recently added books) on the home page. Selecting skins (themes) for the user interface. Additional language version of the user interface. ProjectDue to the selected technologies, the standard application architecture has been used, depicted by the picture below: Source: http://www.thejavageek.com The application implements the MVC pattern, which is divided into three parts: model (JPA + EJB) - represents data from the database in a logical form, implements business functions; view (JSF page) - displays model data; controller (JSF bean) - receives input data from the user, processes it, updates and refreshes the model. Normalized database model (3NF - incomplete, slightly redundant): Some assumptions that might require explanation: If the book does not have an ISBN number (which happens, but very rarely), it should be given a unique value because the books are distinguished by the ISBN field. The copies of the same books do not differ in the ISBN (they differ by an id number). Category, tags and resources (eg files) and reservations in the absence of books in the warehouse are assigned to the ISBN. Loans and reservations are assigned to the book. StructureThe structure of the project is presented in the figure below: Each package has a different purpose: entity classes - POJO, pack data retrieved from the database into abstract types such as Book. session / facade classes - EJB facades, allow communication with a database at a higher level than JDBC. These beans operate on the server side and can be injected into other components. In this case, annotated @Stateless, allow the implementation of reusable services. controller / jsf classes - JSF view controllers, managed beans (ManagedBean), with the declared scope, eg SessionScoped, ViewScoped, ApplicationScoped, etc. They store state according to the scope and ensure communication with JSF websites. JSF pages can retrieve the beana state using the expression #{bean.field} (assuming that getters and setters have been implemented). The JSF pages are part of the last layer - the view. The Facelets template system is used to build JSF pages. In the case of this project, an open source PrimeFaces has been chosen - an UI component library. Thanks to this framework, it is possible to easily create a rich user interface. WEB-INF is a special folder in the application structure that is not publicly available, it is not part of the public document tree. The “view” subfolder in the WEB-INF folder has been separated and there are specific views. Elements with characteristic names such as “Create”, “Edit” or “View” represent windows (dialogs), which through compositions are included in other views (mainly lists) and displayed when the button is clicked. For the user, access to the windows is only available through the views, so they (dialogs) were placed in the WEB-INF folder. The next elements are templates, which also use the composition mechanism and the user should not have access to them. The last component of the WEB-INF folder are the pages to which the user is redirected after logging in. They inform, among others, about the lack of rights to browse the page; blocked or inactive account; as well as about the success of the login or registration process. Four different templates are attached to pages depending on the logged in user’s (or guest’s) rights. The displayed data format also changes, therefore different views have been created that display data in the form of lists. These views use shared windows declared in the WEB-INF folder. Additional infoParts worth attention: passwords hashed with SHA-256 hash function, in subsequent versions of the application could be supplemented with salt. OptionsController loads application options from a file on the server (e.g. data related to the maximum rental period or penalty value for the day of delay). AuthorizationFilter - PhaseFilter that supervises access to sites that require specific permissions. It is responsible for redirecting in case of user not being activated or being banned. ThemeSwitcherBean and LanguageSwitcherBean manage selection of language and theme preferences selected by the user as a cookie. The management of the connection to the database is handled by Glassfish server. The database type is Java DB. Transaction type is JTA, EntityManager is injected via @PersistenceContext. After the bean has been constructed, but before its use, the language value will be set (based on a cookie or a previously initiated value if there is no cookie). After changing the language, the text will be loaded from the corresponding Bundle* file from the resources directory. During the implementation of this feature, the JSTL library was used, and more precisely the fmt tags: setLocale and setBundle were used, thanks to which the files with correct translation are connected with the page. This allows the use of the message tag with the key parameter - a mapping in the file to the translated phrase. One of the project’s flaws is missing i18n for admin news. This feature was missed out during the project and implementation phase. The design also looks a bit old, as this project is one of the older ones.","tags":"documentation application web cms database model","lang":"en"},{"title":"Dokumentacja Splash!","url":"/pl/articles/splash/","text":"Splash! To wieloplatformowy, rastrowy edytor graficzny wzorowany na programach takich jak Photoshop, Gimp czy Microsoft Paint. Ideą przyświecającą aplikacji było wypełnienie luki pomiędzy prostym i intuicyjnym Paintem a zaawansowanym i topornym Gimpem. Aplikacja została napisana w języku Java przy użyciu biblioteki Swing. Głownym celem projektu była nauka i praktyczne wykorzystanie wielu wzorców projektowych. Poniżej znajduje się Przewodnik użytkownika oraz wybrane części dokumentacji. Głównym celem drugiego dokumentu jest opisanie użycia ponad 11 wzorców projektowych użytych w projekcie wraz z diagramami UML - jaki wzorzec, dlaczego i gdzie został użyty w projekcie. Zastosowanie niektórych z nich może wydawać się wymuszone. Niemniej jednak w momencie projektowania ich wybór przyczynił się do procesu myślowego prowadzącego do wyciągnięcie wniosków na zakończenie projektu. Splash! - Przewodnik użytkownikaSplash! - Wybrane części z dokumentacji (wzorce projektowe)","tags":"desktop uml dokumentacja aplikacja grafika przewodnik-użytkownika wzorce-projektowe","lang":"pl"},{"title":"Splash! documentation","url":"/en/articles/splash/","text":"Splash! is a multiplatform, raster graphics editor inspired by such programs as Photoshop, Gimp and Microsoft Paint. The idea while creating the application was to fill the gap between simple and intuitive Paint and advanced and crude Gimp. The application was written in Java using the Swing library. The main point though, was to learn and use in practice many different design patterns. Below you can check find an User’s guide and selected parts of documentation. The main point of the latter one is to describe the usage of over 11 design patterns used in the project with UML diagrams - what pattern, why and where has it been used in the project. Some of them might feel forced. Nevertheless, at the time of development their selection contributed to the thought process allowing to draw conclusions at the end of the project. Splash! - User’s guideSplash! - From docs (design patterns)","tags":"desktop graphics documentation application user-guide design-patterns uml","lang":"en"},{"title":"Witaj Świecie","url":"/pl/articles/hello-world/","text":"Witaj na mojej stronie! Strona została zaktualizowana do nowej wersji w formie niezobowiązującego bloga. Nowe artykuły nie będą pojawiać się zbyt często, a jedynie gdy będę chciał się podzielić czymś interesującym. W archiwum zamieszczone zostaną również galerie przedstawiające aplikacje, które stworzyłem.","tags":"ta-strona","lang":"pl"},{"title":"Hello World","url":"/en/articles/hello-world/","text":"Welcome! The site has been updated to a new version in the form of a non obliging blog. New articles will won’t appear too often, only when I’ll have something interesting to share. Furthermore, in the archives I will include some galleries from applications which I developed.","tags":"this-site","lang":"en"},{"title":"Wyszukiwanie","url":"/pl/search/index.html","text":"","tags":"","lang":"pl"},{"title":"Search","url":"/en/search/index.html","text":"","tags":"","lang":"en"},{"title":"Develog [2017]","url":"/pl/galleries/Develog/index.html","text":"","tags":"","lang":"pl"},{"title":"Develog [2017]","url":"/en/galleries/Develog/index.html","text":"","tags":"","lang":"en"},{"title":"Rozproszony Projekt Łowisk [2017]","url":"/pl/galleries/DistributedFisheryProject/index.html","text":"","tags":"","lang":"pl"},{"title":"Distributed Fishery Project [2017]","url":"/en/galleries/DistributedFisheryProject/index.html","text":"","tags":"","lang":"en"},{"title":"BookRental [2015]","url":"/en/galleries/BookRental/index.html","text":"","tags":"","lang":"en"},{"title":"BookRental [2015]","url":"/pl/galleries/BookRental/index.html","text":"","tags":"","lang":"pl"},{"title":"Support","url":"/support/index.html","text":"If you liked one of my projects and wish to support me: You can use PayPal Are you looking for help or you would like to report a bug in one of my applications? Create an issue in related repository on GitHub. Are you looking for someone to join your interesting open source project or someone to do a freelance job? Contact me.","tags":"","lang":"en"},{"title":"Support","url":"/en/support/index.html","text":"If you liked one of my projects and wish to support me: You can use PayPal Are you looking for help or you would like to report a bug in one of my applications? Create an issue in related repository on GitHub. Are you looking for someone to join your interesting open source project or someone to do a freelance job? Contact me.","tags":"","lang":"en"},{"title":"Wsparcie","url":"/pl/support/index.html","text":"Spodobały Ci się moje projekty i chciałbyś/chciałabyś mnie wesprzeć? Możesz skorzystać z Paypala Szukasz pomocy lub chciałbyś zgłosić błąd odnośnie jednej z moich aplikacji? Załóż issue w powiązanym repozytorium na GitHubie. Szukasz osoby do ciekawego projektu open source lub do wykonania zlecenia? Skontaktuj się ze mną.","tags":"","lang":"pl"},{"title":"About","url":"/en/about/index.html","text":"This site was generated thanks to Hexo framework with modified apollo theme and additional extensions: hexo-generator-i18n hexo-generator-feed hexo-generator-multilingual-archive hexo-generator-tipue-search-json hexo-generator-sitemap jQuery for tipue search and Fotorama Font Awesome Aldrich font and Press Start 2P font","tags":"","lang":"en"},{"title":"O stronie","url":"/pl/about/index.html","text":"Strona ta została wygenerowana przy pomocy platformy programistycznej Hexo wraz ze zmodyfikowanym szablonem apollo oraz dodatkowymi rozszerzeniami: hexo-generator-i18n hexo-generator-feed hexo-generator-multilingual-archive hexo-generator-sitemap hexo-generator-tipue-search-json jQuery do tipue search i Fotoramy Font Awesome czcionka Aldrich oraz czcionka Press Start 2P","tags":"","lang":"pl"}]}